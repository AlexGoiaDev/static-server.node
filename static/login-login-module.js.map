{"version":3,"sources":["webpack:///./src/app/login/login-routing.module.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login/login.component.html","webpack:///./src/app/login/login/login.component.scss","webpack:///./src/app/login/login/login.component.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: LoginComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ]\n})\nexport class LoginModule { }\n","module.exports = \"<div class=\\\"login-container\\\">\\n  <div class=\\\"login-container\\\">\\n    <h1 class=\\\"center-text\\\">\\n      <strong>bingo</strong>puerto\\n    </h1>\\n    <form [formGroup]=\\\"loginForm\\\">\\n      <h3 class=\\\"center-text\\\">Iniciar sesión</h3>\\n      <input formControlName=\\\"userName\\\" placeholder=\\\"Nombre de usuario\\\"/>\\n      <input formControlName=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Contraseña\\\"/>\\n      <button [disabled]=\\\"!loginForm.valid\\\" expand=\\\"block\\\" (click)=\\\"login()\\\">Iniciar sesión</button>\\n    </form>\\n    <p class=\\\"center-text danger\\\" *ngIf=\\\"error && isNotAdmin\\\">\\n      Únicamente pueden entrar los administradores.\\n    </p>\\n\\n    <p class=\\\"center-text danger\\\" *ngIf=\\\"error && !isNotAdmin\\\">\\n      Revisa el usuario y/o la contraseña.\\n    </p>\\n    <p  class=\\\"center-text\\\">\\n      Aplicación para uso exclusivo de los administradores.\\n    </p>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Employee } from 'src/models/employee.model';\nimport { EmployeeService } from 'src/app/services/employee.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { LoginResModel } from 'src/models/login-res.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\n  isLogging = false;\n  error = false;\n  isNotAdmin = false;\n\n  baseUrl = 'http://localhost:3333/';\n  loginForm: FormGroup = new FormGroup({\n    userName: new FormControl('',\n      [Validators.required, Validators.minLength(4), Validators.maxLength(20)]),\n    password: new FormControl('',\n      [Validators.required, Validators.minLength(4), Validators.maxLength(20)])\n  });\n\n  loginSuscription: any;\n\n  constructor(\n    private http: HttpClient,\n    private employeeService: EmployeeService,\n    private router: Router,\n  ) {\n    const baseUrl = localStorage.getItem('ip');\n    if (baseUrl) {\n      this.baseUrl = baseUrl;\n    }\n  }\n\n  ngOnInit() {\n    if (this.employeeService.isEmployeeLogged) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  async login() {\n    if (this.loginForm.valid) {\n      const body: Employee = {\n        userName: this.loginForm.get('userName').value,\n        password: this.loginForm.get('password').value\n      };\n      this.isLogging = true;\n\n      this.http.post(this.baseUrl + 'auth', body).subscribe((res: LoginResModel) => {\n        this.isLogging = false;\n        this.error = false;\n        if (res && res.user) {\n          if (res.user.role && res.user.role === 'admin') {\n            this.isNotAdmin = false;\n            let newEmployee = res.user;\n            newEmployee.password = this.loginForm.get('password').value;\n            localStorage.setItem('token', res.token);\n            this.employeeService.setEmployee(newEmployee);\n            this.router.navigate(['/']);\n          } else {\n            this.isNotAdmin = true;\n            this.error = true;\n          }\n        } else {\n          this.error = true;\n        }\n      }, (err) => {\n        console.warn('Error', err);\n        this.isLogging = false;\n        this.error = true;\n      });\n\n    }\n\n  }\n\n  ngOnDestroy(): void {\n    this.loginForm.reset();\n  }\n\n}\n"],"sourceRoot":""}